{
    "sourceFile": "FYP_final/Backend/routes/LocationsRoutes.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1732760151516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732760435653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,58 @@\n+// const express = require(\"express\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const router = express.Router();\r\n+\r\n+// // Fetch all cities and their routes\r\n+// router.get(\"/locations\", async (req, res) => {\r\n+//   try {\r\n+//     const db = mongoose.connection.db; // Access the database directly\r\n+//     const locations = await db.collection(\"locations\").find().toArray(); // Fetch all documents\r\n+//     res.status(200).json(locations);\r\n+//   } catch (err) {\r\n+//     res\r\n+//       .status(500)\r\n+//       .json({ message: `Error fetching locations: ${err.message}` });\r\n+//   }\r\n+// });\r\n+\r\n+// // Fetch routes for a specific city\r\n+// router.get(\"/locations/:city\", async (req, res) => {\r\n+//   try {\r\n+//     const db = mongoose.connection.db; // Access the database directly\r\n+//     const cityName = req.params.city;\r\n+//     const location = await db\r\n+//       .collection(\"locations\")\r\n+//       .findOne({ city: cityName }); // Find document by city name\r\n+//     if (!location) {\r\n+//       return res.status(404).json({ message: `City '${cityName}' not found` });\r\n+//     }\r\n+//     res.status(200).json(location);\r\n+//   } catch (err) {\r\n+//     res\r\n+//       .status(500)\r\n+//       .json({ message: `Error fetching routes for city: ${err.message}` });\r\n+//   }\r\n+// });\r\n+\r\n+// module.exports = router;\r\n const express = require(\"express\");\r\n const mongoose = require(\"mongoose\");\r\n const router = express.Router();\r\n \r\n // Fetch all cities and their routes\r\n router.get(\"/locations\", async (req, res) => {\r\n   try {\r\n+    console.log(\"Fetching all locations...\");\r\n     const db = mongoose.connection.db; // Access the database directly\r\n+    console.log(\"Connected to database:\", db.databaseName);\r\n+\r\n     const locations = await db.collection(\"locations\").find().toArray(); // Fetch all documents\r\n+    console.log(\"Locations fetched:\", locations);\r\n+\r\n     res.status(200).json(locations);\r\n   } catch (err) {\r\n+    console.error(`Error fetching locations: ${err.message}`);\r\n     res\r\n       .status(500)\r\n       .json({ message: `Error fetching locations: ${err.message}` });\r\n   }\r\n@@ -17,18 +60,27 @@\n \r\n // Fetch routes for a specific city\r\n router.get(\"/locations/:city\", async (req, res) => {\r\n   try {\r\n+    console.log(`Fetching location for city: ${req.params.city}`);\r\n     const db = mongoose.connection.db; // Access the database directly\r\n     const cityName = req.params.city;\r\n+\r\n     const location = await db\r\n       .collection(\"locations\")\r\n       .findOne({ city: cityName }); // Find document by city name\r\n+\r\n     if (!location) {\r\n+      console.warn(`City '${cityName}' not found`);\r\n       return res.status(404).json({ message: `City '${cityName}' not found` });\r\n     }\r\n+\r\n+    console.log(`Location for city '${cityName}' fetched:`, location);\r\n     res.status(200).json(location);\r\n   } catch (err) {\r\n+    console.error(\r\n+      `Error fetching routes for city '${req.params.city}': ${err.message}`\r\n+    );\r\n     res\r\n       .status(500)\r\n       .json({ message: `Error fetching routes for city: ${err.message}` });\r\n   }\r\n"
                }
            ],
            "date": 1732760151516,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst router = express.Router();\r\n\r\n// Fetch all cities and their routes\r\nrouter.get('/locations', async (req, res) => {\r\n  try {\r\n    const db = mongoose.connection.db; // Access the database directly\r\n    const locations = await db.collection('locations').find().toArray(); // Fetch all documents\r\n    res.status(200).json(locations);\r\n  } catch (err) {\r\n    res.status(500).json({ message: `Error fetching locations: ${err.message}` });\r\n  }\r\n});\r\n\r\n// Fetch routes for a specific city\r\nrouter.get('/locations/:city', async (req, res) => {\r\n  try {\r\n    const db = mongoose.connection.db; // Access the database directly\r\n    const cityName = req.params.city;\r\n    const location = await db.collection('locations').findOne({ city: cityName }); // Find document by city name\r\n    if (!location) {\r\n      return res.status(404).json({ message: `City '${cityName}' not found` });\r\n    }\r\n    res.status(200).json(location);\r\n  } catch (err) {\r\n    res.status(500).json({ message: `Error fetching routes for city: ${err.message}` });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"
        }
    ]
}