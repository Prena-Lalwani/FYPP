{
    "sourceFile": "FYP_final/Backend/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1732760509663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732760692472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n // });\r\n const express = require(\"express\");\r\n const dotenv = require(\"dotenv\");\r\n const mongoose = require(\"mongoose\");\r\n+const cors = require(\"cors\"); // Add CORS middleware for external testing\r\n \r\n // Load environment variables from the .env file\r\n dotenv.config();\r\n \r\n@@ -37,17 +38,29 @@\n const app = express();\r\n \r\n // Middleware to parse incoming JSON requests\r\n app.use(express.json());\r\n+app.use(cors()); // Enable CORS\r\n \r\n // Connect to MongoDB\r\n mongoose\r\n-  .connect(process.env.MONGO_URI, {\r\n-    useNewUrlParser: true,\r\n-    useUnifiedTopology: true,\r\n+  .connect(process.env.MONGO_URI) // Removed deprecated options\r\n+  .then(() => {\r\n+    console.log(\"MongoDB connected\");\r\n+\r\n+    // Debug: List collections after connection\r\n+    mongoose.connection.db.listCollections().toArray((err, collections) => {\r\n+      if (err) console.error(\"Error listing collections:\", err);\r\n+      console.log(\r\n+        \"Available collections:\",\r\n+        collections.map((c) => c.name) // Show collection names only\r\n+      );\r\n+    });\r\n   })\r\n-  .then(() => console.log(\"MongoDB connected\"))\r\n-  .catch((err) => console.error(`Error: ${err.message}`));\r\n+  .catch((err) => {\r\n+    console.error(`Error connecting to MongoDB: ${err.message}`);\r\n+    process.exit(1); // Exit the process if MongoDB connection fails\r\n+  });\r\n \r\n // Define the API routes\r\n const locationRoutes = require(\"./routes/LocationsRoutes\"); // Import location routes\r\n app.use(\"/api\", locationRoutes);\r\n"
                },
                {
                    "date": 1732776134784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,134 @@\n+// const express = require('express');\r\n+// const dotenv = require('dotenv');\r\n+// const connectDB = require('./config/db'); // Import the DB connection\r\n+\r\n+// // Load environment variables from the .env file\r\n+// dotenv.config(); // Load the .env file\r\n+\r\n+// // Create an instance of express\r\n+// const app = express();\r\n+\r\n+// // Call connectDB to establish the connection to MongoDB\r\n+// connectDB();\r\n+\r\n+// // Middleware to parse incoming JSON requests\r\n+// app.use(express.json());\r\n+\r\n+// // Define a simple route for testing\r\n+// app.get('/', (req, res) => {\r\n+//   res.send('Hello, the server is running!');\r\n+// });\r\n+\r\n+// // Define the port to run the server on (using the PORT from .env file)\r\n+// const PORT = process.env.PORT || 5000;\r\n+\r\n+// // Start the server and listen on the specified port\r\n+// app.listen(PORT, () => {\r\n+//   console.log(`Server is running on port ${PORT}`);\r\n+// });\r\n+// const express = require(\"express\");\r\n+// const dotenv = require(\"dotenv\");\r\n+// const mongoose = require(\"mongoose\");\r\n+// const cors = require(\"cors\"); // Add CORS middleware for external testing\r\n+\r\n+// // Load environment variables from the .env file\r\n+// dotenv.config();\r\n+\r\n+// // Create an instance of express\r\n+// const app = express();\r\n+\r\n+// // Middleware to parse incoming JSON requests\r\n+// app.use(express.json());\r\n+// app.use(cors()); // Enable CORS\r\n+\r\n+// // Connect to MongoDB\r\n+// mongoose\r\n+//   .connect(process.env.MONGO_URI) // Removed deprecated options\r\n+//   .then(() => {\r\n+//     console.log(\"MongoDB connected\");\r\n+\r\n+//     // Debug: List collections after connection\r\n+//     mongoose.connection.db.listCollections().toArray((err, collections) => {\r\n+//       if (err) console.error(\"Error listing collections:\", err);\r\n+//       console.log(\r\n+//         \"Available collections:\",\r\n+//         collections.map((c) => c.name) // Show collection names only\r\n+//       );\r\n+//     });\r\n+//   })\r\n+//   .catch((err) => {\r\n+//     console.error(`Error connecting to MongoDB: ${err.message}`);\r\n+//     process.exit(1); // Exit the process if MongoDB connection fails\r\n+//   });\r\n+\r\n+// // Define the API routes\r\n+// const locationRoutes = require(\"./routes/LocationsRoutes\"); // Import location routes\r\n+// app.use(\"/api\", locationRoutes);\r\n+\r\n+// // Define a simple route for testing\r\n+// app.get(\"/\", (req, res) => {\r\n+//   res.send(\"Hello, the server is running!\");\r\n+// });\r\n+\r\n+// // Define the port to run the server on (using the PORT from .env file)\r\n+// const PORT = process.env.PORT || 5000;\r\n+\r\n+// // Start the server and listen on the specified port\r\n+// app.listen(PORT, () => {\r\n+//   console.log(`Server is running on port ${PORT}`);\r\n+// });\r\n+const express = require(\"express\");\r\n+const dotenv = require(\"dotenv\");\r\n+const mongoose = require(\"mongoose\");\r\n+const cors = require(\"cors\"); // Add CORS middleware for external testing\r\n+\r\n+// Load environment variables from the .env file\r\n+dotenv.config();\r\n+\r\n+// Create an instance of express\r\n+const app = express();\r\n+\r\n+// Middleware to parse incoming JSON requests\r\n+app.use(express.json());\r\n+app.use(cors()); // Enable CORS\r\n+\r\n+// Connect to MongoDB\r\n+mongoose\r\n+  .connect(process.env.MONGO_URI) // Removed deprecated options\r\n+  .then(() => {\r\n+    console.log(\"MongoDB connected\");\r\n+\r\n+    // Debug: List collections after connection\r\n+    mongoose.connection.db.listCollections().toArray((err, collections) => {\r\n+      if (err) console.error(\"Error listing collections:\", err);\r\n+      console.log(\r\n+        \"Available collections:\",\r\n+        collections.map((c) => c.name) // Show collection names only\r\n+      );\r\n+    });\r\n+  })\r\n+  .catch((err) => {\r\n+    console.error(`Error connecting to MongoDB: ${err.message}`);\r\n+    process.exit(1); // Exit the process if MongoDB connection fails\r\n+  });\r\n+\r\n+// Define the API routes\r\n+const locationRoutes = require(\"./routes/LocationsRoutes\"); // Import location routes\r\n+app.use(\"/api\", locationRoutes);\r\n+\r\n+// Import authentication routes\r\n+const authRoutes = require(\"./routes/authRoutes\"); // Import your auth routes\r\n+app.use(\"/api/auth\", authRoutes); // Mount auth routes under '/api/auth'\r\n+\r\n+// Define a simple route for testing\r\n+app.get(\"/\", (req, res) => {\r\n+  res.send(\"Hello, the server is running!\");\r\n+});\r\n+\r\n+// Define the port to run the server on (using the PORT from .env file)\r\n+const PORT = process.env.PORT || 5000;\r\n+\r\n+// Start the server and listen on the specified port\r\n+app.listen(PORT, () => {\r\n+  console.log(`Server is running on port ${PORT}`);\r\n+});\r\n"
                }
            ],
            "date": 1732760509663,
            "name": "Commit-0",
            "content": "// const express = require('express');\r\n// const dotenv = require('dotenv');\r\n// const connectDB = require('./config/db'); // Import the DB connection\r\n\r\n// // Load environment variables from the .env file\r\n// dotenv.config(); // Load the .env file\r\n\r\n// // Create an instance of express\r\n// const app = express();\r\n\r\n// // Call connectDB to establish the connection to MongoDB\r\n// connectDB();\r\n\r\n// // Middleware to parse incoming JSON requests\r\n// app.use(express.json());\r\n\r\n// // Define a simple route for testing\r\n// app.get('/', (req, res) => {\r\n//   res.send('Hello, the server is running!');\r\n// });\r\n\r\n// // Define the port to run the server on (using the PORT from .env file)\r\n// const PORT = process.env.PORT || 5000;\r\n\r\n// // Start the server and listen on the specified port\r\n// app.listen(PORT, () => {\r\n//   console.log(`Server is running on port ${PORT}`);\r\n// });\r\nconst express = require('express');\r\nconst dotenv = require('dotenv');\r\nconst mongoose = require('mongoose');\r\n\r\n// Load environment variables from the .env file\r\ndotenv.config();\r\n\r\n// Create an instance of express\r\nconst app = express();\r\n\r\n// Middleware to parse incoming JSON requests\r\napp.use(express.json());\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })\r\n  .then(() => console.log('MongoDB connected'))\r\n  .catch((err) => console.error(`Error: ${err.message}`));\r\n\r\n// Define the API routes\r\nconst locationRoutes = require('./routes/LocationsRoutes'); // Import location routes\r\napp.use('/api', locationRoutes);\r\n\r\n// Define a simple route for testing\r\napp.get('/', (req, res) => {\r\n  res.send('Hello, the server is running!');\r\n});\r\n\r\n// Define the port to run the server on (using the PORT from .env file)\r\nconst PORT = process.env.PORT || 5000;\r\n\r\n// Start the server and listen on the specified port\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n"
        }
    ]
}